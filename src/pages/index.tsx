import { type NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { signIn, signOut, useSession } from 'next-auth/react';

import { api } from '~/utils/api';
import ComboListCard from '~/components/comboListCard';
import AddComboListModal from '~/ui/addComboListModal';

const Home: NextPage = () => {
  // userId should not be hardcoded in the future
  // Just here for development purposes
  const userId = 'clf1bxlaa0000oz2ss6okg767';
  const { data, isLoading } = api.comboList.getComboLists.useQuery({ userId });
  const apiDeleteComboList = api.comboList.removeComboList.useMutation();

  const [displayModal, setDisplayModal] = useState<boolean>(false);
  const [comboLists, setComboLists] = useState<
    {
      id: number;
      title: string;
    }[]
  >([]);

  const removeComboList = (id: number) => {
    apiDeleteComboList.mutate({ id });
    setComboLists(
      comboLists?.filter((comboList) => {
        return id !== comboList.id;
      })
    );
  };

  const renderComboLists = comboLists?.map(({ id, title }) => {
    return (
      <ComboListCard
        key={id}
        id={id}
        title={title}
        removeComboList={removeComboList}
      />
    );
  });

  useEffect(() => {
    if (data) {
      setComboLists(data);
    }
  }, [data]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center">
        <AddComboListModal
          show={displayModal}
          setDisplayModal={setDisplayModal}
        />
        <div className="container flex flex-col items-center gap-10 px-4 py-16">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Combo <span className="text-[hsl(280,100%,70%)]">App</span>
          </h1>
          {isLoading ? (
            <div>Loading combolists...</div>
          ) : (
            <>
              <button
                className="rounded-xl bg-green-600 bg-opacity-80 px-8 py-3 font-bold transition-all duration-300 hover:bg-opacity-100"
                onClick={() => setDisplayModal(true)}
              >
                Add ComboList
              </button>
              {renderComboLists}
              <div className="flex flex-col items-center gap-2">
                <AuthShowcase />
              </div>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.user.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  );
};
